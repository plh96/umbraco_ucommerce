<configuration>
  <components>

    <component id="Initialize"
               service="Ucommerce.Pipelines.IPipeline`1[[Ucommerce.Pipelines.Initialization.InitializeArgs, Ucommerce.Pipelines]], Ucommerce"
               type="Ucommerce.Pipelines.Initialization.InitializePipeline, Ucommerce.Pipelines">
      <parameters>
        <tasks>
          <array>
            <value>${Initialize.ExecuteUpdateCurrencyExchangeRatesPipelineTask.Async}</value>
            <value>${Initialize.ReinitializeWebApiControllerCacheTask}</value>
          </array>
        </tasks>
      </parameters>
    </component>

    <component
      id="Initialize.ReinitializeWebApiControllerCacheTask"
      service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.Initialization.InitializeArgs, Ucommerce.Pipelines]], Ucommerce"
      type="Ucommerce.SystemHttp.Pipelines.Initialize.ReinitializeWebApiControllerCache, Ucommerce.SystemHttp"
    />

    <component
      id="Initialize.ExecuteUpdateCurrencyExchangeRatesPipelineTask"
      service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.Initialization.InitializeArgs, Ucommerce.Pipelines]], Ucommerce"
      type="Ucommerce.Pipelines.Initialization.ExecuteUpdateCurrencyExchangeRatesPipelineTask, Ucommerce.Pipelines"
    />

    <component
      id="Initialize.ExecuteUpdateCurrencyExchangeRatesPipelineTask.Async"
      service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.Initialization.InitializeArgs, Ucommerce.Pipelines]], Ucommerce"
      type="Ucommerce.Pipelines.GenericPipelineTaskAsync`1[[Ucommerce.Pipelines.Initialization.InitializeArgs, Ucommerce.Pipelines]], Ucommerce" >
      <parameters>
        <pipelineTaskName>Initialize.ExecuteUpdateCurrencyExchangeRatesPipelineTask</pipelineTaskName>
        <MaxNumberOfTries>3</MaxNumberOfTries>
      </parameters>
    </component>

  </components>
</configuration>